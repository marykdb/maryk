name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            gradle_task: "macosArm64Test tvosSimulatorArm64Test watchosSimulatorArm64Test iosSimulatorArm64Test jvmTest"
            job_name: macOS Apple Arm tests
          - os: macos-15-intel
            gradle_task: "macosX64Test"
            job_name: macOS Apple Intel tests
          - os: ubuntu-latest
            gradle_task: linuxX64Test jsTest jvmTest
            job_name: Linux all tests
          - os: windows-latest
            prewarm_tasks: ":lib:compileKotlinMingwX64"
            gradle_task: mingwX64Test :core:jvmTest
            job_name: Windows MinGW tests
      fail-fast: false
    name: ${{ matrix.job_name }}
    runs-on: ${{ matrix.os }}
    env:
      FDB_VERSION: '7.3.69'

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Detect Kotlin version
        id: detect-kotlin
        shell: bash
        run: |
          if [[ -f gradle/libs.versions.toml ]]; then
            V=$(grep -E '^[[:space:]]*kotlin[[:space:]]*=\s*"[0-9]+(\.[0-9]+)*"' -m1 gradle/libs.versions.toml | sed -E 's/.*"([0-9]+(\.[0-9]+)*)".*/\1/')
          else
            V=$(grep -R -E '^[[:space:]]*kotlin\.version[[:space:]]*=' -m1 **/gradle.properties | head -n1 | sed -E 's/.*=[[:space:]]*([0-9]+(\.[0-9]+)*).*/\1/')
          fi
          echo "KOTLIN_VERSION=${V:-unknown}" >> "$GITHUB_ENV"

      - name: Cache Kotlin/Native dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/dependencies/cache/**
            ~/.konan/kotlin-native-prebuilt-*
          key: konan-deps-${{ runner.os }}-${{ runner.arch }}-${{ env.KOTLIN_VERSION }}
          restore-keys: |
            konan-deps-${{ runner.os }}-${{ runner.arch }}

      - name: Cache FoundationDB binaries
        uses: actions/cache@v4
        with:
          path: |
            store/foundationdb/bin/**
          key: fdb-${{ runner.os }}-${{ runner.arch }}-${{ env.FDB_VERSION }}-${{ hashFiles('store/foundationdb/scripts/install-foundationdb.sh') }}
          restore-keys: |
            fdb-${{ runner.os }}-${{ runner.arch }}

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-cleanup: on-success
          cache-read-only: ${{ github.event_name == 'pull_request' }}

      - name: Run Gradle tasks
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx3g
        shell: bash
        run: ./gradlew ${{ matrix.gradle_task }} --stacktrace --build-cache

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: final-build-report-${{ runner.os }}-${{ runner.arch }}
          path: build/reports/**
          if-no-files-found: ignore
          compression-level: 9
